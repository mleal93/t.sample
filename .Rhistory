######################",
"y_barra2                     "    = y_barra2,
"vchapeu_ybarra2              "    = vchapeu_ybarra2,
"s_ybarra2                    "    = s_ybarra2,
"Statistic                    "    = statistic,
"Statistic Value              "    = statistic.val,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ybar2[1]," ; ",confidence.interval.ybar[2]," ]"),
"      #####################       "    ="
Estimativas para o Total
######################",
"y_chapeu                     "    = y_chapeu,
"vchapeu_ychapeu              "    = vchapeu_ychapeu,
"s_ychapeu                    "    = s_ychapeu,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ychapeu[1]," ; ",confidence.interval.ychapeu[2]," ]"),
method=METHOD
),class = "power.htest")
}
}
smp.conglomerado(data = data2,c.lev = 95,type = "t",N = 100,c.unit=T)
smp.conglomerado = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
if( tolower(type)=="p"){
posx=which(tolower(names(data))=="x")
posn=which(tolower(names(data))=="n")
sample.size=sum(data[,posn])
nup=length(data[,1])
proporcoes=data[,posx]/data[,posn]
p_chapeu=sum(data[,posx])/sample.size
p_barra=sum(proporcoes)/nup
s2c=(sum((proporcoes-p_barra)^2))/(nup-1)
f=sample.size/N
v_pbarra=(1-f)*(s2c/nup)
dp_pbarra=sqrt(v_pbarra)
if(nup<30){statistic.val     =qt(p=.5+c.lev/200, df = nup-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
confidence.interval.pbar   =round(p_barra+(c(-1,1)*statistic.val*(dp_pbarra)),6)
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Sample Size (n)             "    = sample.size,
"Population Size (N)         "    = N,
"p_hat                       "    = p_chapeu,
"p_bar                       "    = p_barra,
"Cluster Variance (S2c)      "    = s2c,
"Sample Fraction (f)         "    = f,
"p_bar Variance v(p_bar)     "    = v_pbarra,
"dp(p_bar)                   "    = dp_pbarra,
"Statistic                   "    = statistic,
"Statistic Value             "    = statistic.val,
"Confidence Interval of p_bar"    = paste0("IC",c.lev,"% : [ ",confidence.interval.pbar[1]," ; ",confidence.interval.pbar[2]," ]"),
"Proportions                 "    = proporcoes,
method=METHOD
),class = "power.htest")
}else{
if(c.unit==T){
data1=t(data)
rownames(data1)=1:length(data1[,1])
colnames(data1)=1:length(data1[1,])
data=as.data.frame(data1)
}
n=length(data[,1])
m=length(data[1,])
yi.=apply(data,1,sum)
total_yi.=sum(yi.)
total_yi.2=sum(yi.^2)
total_yij=sum(data)^2
y_barra=total_yi./n
s2b=(total_yi.2-(total_yij/n))/(n-1)
vchapeu_ybarra=((N-n)/N)*(s2b/n)
s_ybarra=sqrt(vchapeu_ybarra)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
confidence.interval.ybar   =round(y_barra+(c(-1,1)*statistic.val*(s_ybarra)),6)
y_barra2=total_yi./(n*m)
vchapeu_ybarra2=(1/m^2)*vchapeu_ybarra
s_ybarra2=sqrt(vchapeu_ybarra2)
confidence.interval.ybar2   =round(y_barra2+(c(-1,1)*statistic.val*(s_ybarra2)),6)
y_chapeu=N*y_barra
vchapeu_ychapeu=N^2*vchapeu_ybarra
s_ychapeu=sqrt(vchapeu_ychapeu)
confidence.interval.ychapeu   =round(y_chapeu+(c(-1,1)*statistic.val*(s_ychapeu)),6)
METHOD = paste("Results for calculated estimatives for Cluster Sampling")
structure(list(
"      #####################       "    ="
Unidades Primarias
######################",
"Population Size (N)         "    = N,
"yi.                         "    = yi.,
"Total yi.                   "    = total_yi.,
"(yi.)^2                     "    = yi.^2,
"Total (yi.)^2               "    = total_yi.2,
"Total yij                   "    = total_yij,
"y_barra                     "    = y_barra,
"s2b                         "    = s2b,
"vchapeu_ybarra              "    = vchapeu_ybarra,
"s_ybarra                    "    = s_ybarra,
"Confidence Interval of y_bar"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ybar[1]," ; ",confidence.interval.ybar2[2]," ]"),
"      #####################       "    ="
Unidades Secundarias
######################",
"y_barra2                     "    = y_barra2,
"vchapeu_ybarra2              "    = vchapeu_ybarra2,
"s_ybarra2                    "    = s_ybarra2,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ybar2[1]," ; ",confidence.interval.ybar[2]," ]"),
"      #####################       "    ="
Estimativas para o Total
######################",
"y_chapeu                     "    = y_chapeu,
"vchapeu_ychapeu              "    = vchapeu_ychapeu,
"s_ychapeu                    "    = s_ychapeu,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ychapeu[1]," ; ",confidence.interval.ychapeu[2]," ]"),
method=METHOD
),class = "power.htest")
}
}
smp.conglomerado(data = data,c.lev = 95,type = "t",N = 80,c.unit=F)
data2<-data.frame(
"1"=c(3.08,2.36,2.00,3.00,2.68),
"2"=c(2.60,3.04,2.56,2.88,1.92),
"3"=c(3.44,3.28,2.52,3.44,3.28),
"4"=c(3.04,2.68,1.88,3.64,3.2)
)
smp.conglomerado(data = data2,c.lev = 95,type = "t",N = 100,c.unit=T)
smp.conglomerado = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
if( tolower(type)=="p"){
posx=which(tolower(names(data))=="x")
posn=which(tolower(names(data))=="n")
sample.size=sum(data[,posn])
nup=length(data[,1])
proporcoes=data[,posx]/data[,posn]
p_chapeu=sum(data[,posx])/sample.size
p_barra=sum(proporcoes)/nup
s2c=(sum((proporcoes-p_barra)^2))/(nup-1)
f=sample.size/N
v_pbarra=(1-f)*(s2c/nup)
dp_pbarra=sqrt(v_pbarra)
if(nup<30){statistic.val     =qt(p=.5+c.lev/200, df = nup-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
confidence.interval.pbar   =round(p_barra+(c(-1,1)*statistic.val*(dp_pbarra)),6)
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Sample Size (n)             "    = sample.size,
"Population Size (N)         "    = N,
"p_hat                       "    = p_chapeu,
"p_bar                       "    = p_barra,
"Cluster Variance (S2c)      "    = s2c,
"Sample Fraction (f)         "    = f,
"p_bar Variance v(p_bar)     "    = v_pbarra,
"dp(p_bar)                   "    = dp_pbarra,
"Statistic                   "    = statistic,
"Statistic Value             "    = statistic.val,
"Confidence Interval of p_bar"    = paste0("IC",c.lev,"% : [ ",confidence.interval.pbar[1]," ; ",confidence.interval.pbar[2]," ]"),
"Proportions                 "    = proporcoes,
method=METHOD
),class = "power.htest")
}else{
if(c.unit==T){
data1=t(data)
rownames(data1)=1:length(data1[,1])
colnames(data1)=1:length(data1[1,])
data=as.data.frame(data1)
}
n=length(data[,1])
m=length(data[1,])
yi.=apply(data,1,sum)
total_yi.=sum(yi.)
total_yi.2=sum(yi.^2)
total_yij=sum(data)^2
y_barra=total_yi./n
s2b=(total_yi.2-(total_yij/n))/(n-1)
vchapeu_ybarra=((N-n)/N)*(s2b/n)
s_ybarra=sqrt(vchapeu_ybarra)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
confidence.interval.ybar   =round(y_barra+(c(-1,1)*statistic.val*(s_ybarra)),6)
y_barra2=total_yi./(n*m)
vchapeu_ybarra2=(1/m^2)*vchapeu_ybarra
s_ybarra2=sqrt(vchapeu_ybarra2)
confidence.interval.ybar2   =round(y_barra2+(c(-1,1)*statistic.val*(s_ybarra2)),6)
y_chapeu=N*y_barra
vchapeu_ychapeu=N^2*vchapeu_ybarra
s_ychapeu=sqrt(vchapeu_ychapeu)
confidence.interval.ychapeu   =round(y_chapeu+(c(-1,1)*statistic.val*(s_ychapeu)),6)
METHOD = paste("Results for calculated estimatives for Cluster Sampling")
structure(list(
"      #####################       "    ="
Unidades Primarias
######################",
"Statistic                    "    = statistic,
"Statistic Value              "    = statistic.val,
"Population Size (N)         "    = N,
"Tamanho Unidade Primaria (n)"    = n,
"Tamanho Unidade Secundaria (m)"  = m,
"yi.                         "    = yi.,
"Total yi.                   "    = total_yi.,
"(yi.)^2                     "    = yi.^2,
"Total (yi.)^2               "    = total_yi.2,
"Total yij                   "    = total_yij,
"y_barra                     "    = y_barra,
"s2b                         "    = s2b,
"vchapeu_ybarra              "    = vchapeu_ybarra,
"s_ybarra                    "    = s_ybarra,
"Confidence Interval of y_bar"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ybar[1]," ; ",confidence.interval.ybar2[2]," ]"),
"      #####################       "    ="
Unidades Secundarias
######################",
"y_barra2                     "    = y_barra2,
"vchapeu_ybarra2              "    = vchapeu_ybarra2,
"s_ybarra2                    "    = s_ybarra2,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ybar2[1]," ; ",confidence.interval.ybar[2]," ]"),
"      #####################       "    ="
Estimativas para o Total
######################",
"y_chapeu                     "    = y_chapeu,
"vchapeu_ychapeu              "    = vchapeu_ychapeu,
"s_ychapeu                    "    = s_ychapeu,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ychapeu[1]," ; ",confidence.interval.ychapeu[2]," ]"),
method=METHOD
),class = "power.htest")
}
}
smp.conglomerado(data = data,c.lev = 95,type = "t",N = 80,c.unit=F)
data2<-data.frame(
"1"=c(3.08,2.36,2.00,3.00,2.68),
"2"=c(2.60,3.04,2.56,2.88,1.92),
"3"=c(3.44,3.28,2.52,3.44,3.28),
"4"=c(3.04,2.68,1.88,3.64,3.2)
)
smp.conglomerado(data = data2,c.lev = 95,type = "t",N = 100,c.unit=T)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(t.sample)
devtools::document()
devtools::load_all(".")
devtools::document()
devtools::document()
library(t.sample)
devtools::document()
devtools::document()
library(t.sample)
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
data
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
if(nup<30){statistic.val     =qt(p=.5+c.lev/200, df = nup-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = sample.size,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Sd                         "    = s,
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = nup-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = sample.size,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Sd                         "    = s,
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = sample.size,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Sd                         "    = s,
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = n,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Sd                         "    = s,
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = n,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Sd                         "    = s,
"Var                        "    = s^2,
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
ni=apply(data,2,length)
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
y_barra=mean(x_barra)
v_ybarra=(1/N)*sum((x_barra-y_barra)^2*ni)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = n,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Y_barra                     "   = y_barra,
"Sd                         "    = s,
"Var                        "    = s^2,
"V(y_barra)                 "    = v_ybarra
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
ni=apply(data,2,length)
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
y_barra=mean(x_barra)
v_ybarra=(1/N)*sum((x_barra-y_barra)^2*ni)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = n,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Y_barra                     "   = y_barra,
"Sd                         "    = s,
"Var                        "    = s^2,
"V(y_barra)                 "    = v_ybarra,
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
ni=apply(data,2,length)
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
y_barra=mean(x_barra)
v_ybarra=(1/N)*sum((x_barra-y_barra)^2*ni)
ep=sqrt(v_ybarra)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
confidence.interval.ybarra   =round(y_barra+(c(-1,1)*statistic.val*(ep)),6)
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Groups                      "    = k,
"Sample Size (n)             "    = n,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Y_barra                     "   = y_barra,
"Sd                         "    = s,
"Var                        "    = s^2,
"V(y_barra)                 "    = v_ybarra,
"EP                         "     = ep,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ybarra[1]," ; ",confidence.interval.ybarra[2]," ]"),
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
smp.sistematica = function(data=NULL,c.lev=95,N=NULL,type=NULL,c.unit=NULL) {
n=length(data[,1])
ni=apply(data,2,length)
k=length((data[1,]))
x_barra=apply(data,2,mean)
s=apply(data,2,sd)
y_barra=mean(x_barra)
v_ybarra=(1/N)*sum((x_barra-y_barra)^2*ni)
ep=sqrt(v_ybarra)
if(n<30){statistic.val     =qt(p=.5+c.lev/200, df = n-1 );statistic="t Student Statistic"}
else {statistic.val = qnorm(.5+c.lev/200);statistic="Score Statistic (Z)"}
confidence.interval.ybarra   =round(y_barra+(c(-1,1)*statistic.val*(ep)),6)
METHOD = paste("Results for calculated estimatives for Cluster Sampling (Proportion)")
structure(list(
"Statistic                    "    = statistic,
"Statistic Value              "    = statistic.val,
"Groups                      "    = k,
"Sample Size (n)             "    = n,
"Population Size (N)         "    = N,
"Mean                       "    = x_barra,
"Y_barra                     "   = y_barra,
"Sd                         "    = s,
"Var                        "    = s^2,
"V(y_barra)                 "    = v_ybarra,
"EP                         "     = ep,
"Confidence Interval of y_bar2"    = paste0("IC",c.lev,"% : [ ",confidence.interval.ybarra[1]," ; ",confidence.interval.ybarra[2]," ]"),
method=METHOD
),class = "power.htest")
}
data<-data.frame(
"1"=c(23,23,43,40,20,14,17,20,15,16),
"2"=c(30,38,23,17,20,22,12,14,29,22),
"3"=c(19,19,14,40,24,24,30,15,10,16),
"4"=c(38,18,17,23,14,14,14,14,10,12)
)
smp.sistematica(data = data,c.lev = 95,N = 1000)
devtools::document()
library(t.sample)
devtools::document()
library(t.sample)
library(t.sample)
devtools::build_win()
devtools::submit_cran()
devtools::document()
library(t.sample)
